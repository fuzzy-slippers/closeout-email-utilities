
> testing-clasp@0.0.0 test /home/ubuntu/workspace/closeout-email-utilities
> mocha ~/workspace/closeout-email-utilities/test/ --recursive



  alasql-utils
    #createNewDatabase_()
      ✓ should return a new alasql db object, which should have a 'databaseid' property
    #addTablePopulatedByTwoDimArrWithHeaderRowData_()
      ✓ should return a db with a table under name we specified (SELECT * on that table name should not throw an error)
      ✓ should return a db with a non empty table under the name we specified if we include data in the 2d array passed in
      ✓ should throw an error if we try to add a table by specifying a table name that already exists in the db previously
      ✓ should be possible to add a second table to the same db and query the data for both successfully
    #selectFromTwoDimArr()
      ✓ should if passed test 2d array and just a select * sql statement, it should return the original data
      ✓ should if passed test 2d array with null in first column and a sql statement with WHERE excluding nulls, return 2d array with null rows removed

  api-utils
    #apiGetCallKr()
node - top of get_award_amount_transaction_by_pri_key()
inside rewiring of callKrGetApiWithWait, relativeApiUri detected as: /award/api/v1/award-types/
from node - initial raw result returned from api call (jsonReturnedByApiCall var) shows: [{"code":1,"description":"Grant","_primaryKey":"1"},{"code":3,"description":"Contract","_primaryKey":"3"},{"code":4,"description":"Indefinite Delivery Contract","_primaryKey":"4"},{"code":5,"description":"Cooperative Agreement","_primaryKey":"5"},{"code":8,"description":"Consortium Membership","_primaryKey":"8"},{"code":9,"description":"Other Transaction Agreement","_primaryKey":"9"},{"code":13,"description":"Non Disclosure Agreement","_primaryKey":"13"},{"code":14,"description":"Material Transfer Agreement","_primaryKey":"14"},{"code":15,"description":"Teaming Agreement","_primaryKey":"15"},{"code":16,"description":"Equipment Loan","_primaryKey":"16"},{"code":17,"description":"Memorandum of Understanding","_primaryKey":"17"},{"code":18,"description":"Intergovernmental Personnel Assignment","_primaryKey":"18"},{"code":19,"description":"CHOOSE AN AWARD TYPE - was blank in RAA - DO NOT USE","_primaryKey":"19"},{"code":20,"description":"Data Use Agreement","_primaryKey":"20"},{"code":21,"description":"Software License","_primaryKey":"21"}]
from node - got past the json.parse step and now its showing obj jsObjToReturn: [{"code":1,"description":"Grant","_primaryKey":"1"},{"code":3,"description":"Contract","_primaryKey":"3"},{"code":4,"description":"Indefinite Delivery Contract","_primaryKey":"4"},{"code":5,"description":"Cooperative Agreement","_primaryKey":"5"},{"code":8,"description":"Consortium Membership","_primaryKey":"8"},{"code":9,"description":"Other Transaction Agreement","_primaryKey":"9"},{"code":13,"description":"Non Disclosure Agreement","_primaryKey":"13"},{"code":14,"description":"Material Transfer Agreement","_primaryKey":"14"},{"code":15,"description":"Teaming Agreement","_primaryKey":"15"},{"code":16,"description":"Equipment Loan","_primaryKey":"16"},{"code":17,"description":"Memorandum of Understanding","_primaryKey":"17"},{"code":18,"description":"Intergovernmental Personnel Assignment","_primaryKey":"18"},{"code":19,"description":"CHOOSE AN AWARD TYPE - was blank in RAA - DO NOT USE","_primaryKey":"19"},{"code":20,"description":"Data Use Agreement","_primaryKey":"20"},{"code":21,"description":"Software License","_primaryKey":"21"}]
retArr is: [{"code":1,"description":"Grant","_primaryKey":"1"},{"code":3,"description":"Contract","_primaryKey":"3"},{"code":4,"description":"Indefinite Delivery Contract","_primaryKey":"4"},{"code":5,"description":"Cooperative Agreement","_primaryKey":"5"},{"code":8,"description":"Consortium Membership","_primaryKey":"8"},{"code":9,"description":"Other Transaction Agreement","_primaryKey":"9"},{"code":13,"description":"Non Disclosure Agreement","_primaryKey":"13"},{"code":14,"description":"Material Transfer Agreement","_primaryKey":"14"},{"code":15,"description":"Teaming Agreement","_primaryKey":"15"},{"code":16,"description":"Equipment Loan","_primaryKey":"16"},{"code":17,"description":"Memorandum of Understanding","_primaryKey":"17"},{"code":18,"description":"Intergovernmental Personnel Assignment","_primaryKey":"18"},{"code":19,"description":"CHOOSE AN AWARD TYPE - was blank in RAA - DO NOT USE","_primaryKey":"19"},{"code":20,"description":"Data Use Agreement","_primaryKey":"20"},{"code":21,"description":"Software License","_primaryKey":"21"}]
retArr[0] is: {"code":1,"description":"Grant","_primaryKey":"1"}
      ✓ should if given a valid Uri like /award/api/v1/award-types/ return an object (array) generated from the JSON data returned with the array position 1 object having a _primaryKey property
node - top of get_award_amount_transaction_by_pri_key()
inside rewiring of callKrGetApiWithWait, relativeApiUri detected as: /fakeApiUrl/
from node - initial raw result returned from api call (jsonReturnedByApiCall var) shows: {"Error":{"errors":["not found for key -1"]}}
from node - got past the json.parse step and now its showing obj jsObjToReturn: {"Error":{"errors":["not found for key -1"]}}
      ✓ should if given a totally invalid url like /fakeApiUrl/ return an error object
    #getAwardAmountTransactionByPrimaryKey()
node - top of get_award_amount_transaction_by_pri_key()
inside rewiring of callKrGetApiWithWait, relativeApiUri detected as: /award/api/v1/award-amount-transactions/773750
from node - initial raw result returned from api call (jsonReturnedByApiCall var) shows: {"awardAmountTransactionId":773750,"comments":null,"documentNumber":"2455782","noticeDate":1525233600000,"awardNumber":"029053-00001","transactionTypeCode":4,"_primaryKey":"773750"}
from node - got past the json.parse step and now its showing obj jsObjToReturn: {"awardAmountTransactionId":773750,"comments":null,"documentNumber":"2455782","noticeDate":1525233600000,"awardNumber":"029053-00001","transactionTypeCode":4,"_primaryKey":"773750"}
missingNoticeDates.getAwardAmountTransactionByPrimaryKey(773750) is returning: {"awardAmountTransactionId":773750,"comments":null,"documentNumber":"2455782","noticeDate":1525233600000,"awardNumber":"029053-00001","transactionTypeCode":4,"_primaryKey":"773750"}

node - top of get_award_amount_transaction_by_pri_key()
inside rewiring of callKrGetApiWithWait, relativeApiUri detected as: /award/api/v1/award-amount-transactions/773750
from node - initial raw result returned from api call (jsonReturnedByApiCall var) shows: {"awardAmountTransactionId":773750,"comments":null,"documentNumber":"2455782","noticeDate":1525233600000,"awardNumber":"029053-00001","transactionTypeCode":4,"_primaryKey":"773750"}
from node - got past the json.parse step and now its showing obj jsObjToReturn: {"awardAmountTransactionId":773750,"comments":null,"documentNumber":"2455782","noticeDate":1525233600000,"awardNumber":"029053-00001","transactionTypeCode":4,"_primaryKey":"773750"}
      ✓ should if passed the _primaryKey 773750, return a valid js object (not raw JSON) with a awardAmountTransactionId property of 773750
node - top of get_award_amount_transaction_by_pri_key()
inside rewiring of callKrGetApiWithWait, relativeApiUri detected as: /award/api/v1/award-amount-transactions/-1
from node - initial raw result returned from api call (jsonReturnedByApiCall var) shows: {"Error":{"errors":["not found for key -1"]}}
from node - got past the json.parse step and now its showing obj jsObjToReturn: {"Error":{"errors":["not found for key -1"]}}
      ✓ should if given a totally invalid primary key like -1 return an error object

  array-utils
    #convertFromTwoDimArrWithHeaderToObjArr()
      ✓ should given an array [['col1', 'col2'], [1,2], ['A', 'B']] return a 1d array of objects with the header row as property names [{col1: 1, col2: 2}, {col1: 'A', col2: 'B'}]
    #unionArrs()
      ✓ should convert 3 arrays passed in (2d array) to a single 1d array with the values in order but with unique values only shown once, like a db union statement
      ✓ should convert 2 simple numeric arrays (2d array) of 1 and 2 with a second array with just 1 to a 1d array with just 1 and 2
    #duplicateArrayAllElementsReplacedWith()
      ✓ should if passed an array with 5 elements & to replace with nulls, it should return an array with 5 null arr elements
      ✓ should if passed an empty array return back an empty array
      ✓ should if passed an array with 5 elements to replace with nulls, the original array should not be affected (non-mutating)
      ✓ should if passed an array with 5 elements & to replace with strings, it should return an array with all 5 matching the str
testArrayCreatedWithConstructorLengthFour: [null,null,null,null]
      ✓ should if passed an array created with the array constructor to create a 4 element array using Array(4), return an array with all elements replaced with the string specified
    #convertOneDimObjArrToTwoDimArrWithHeaderRow()
      ✓ should convert a 1d array [{prop1: "dog", prop2: "food"}, {prop1: "cat" prop2: "salmon"}] to [["prop1", "prop2"], ["dog", "food"], ["cat", "salmon"]]
      ✓ should convert an empty 1d array into an empty 2d array
      ✓ should handle objects with different numbers of properties - [{"1":"a"}, {"1":"b", "2":"z"}] returning [["1","2"],["a", null],["b","z"]]
      ✓ should handle objects with different numbers of properties - [{"1":"a"}, {"1":"b", "2":"z"}, {"1":"c", "2":"y", "3":"A"}] returning [["1","2","3"],["a", null, null],["b","z", null],["c","y","A"]]
      ✓ should handle objects with different numbers of properties not always in increasing order - [{"1":"a"}, {"1":"b", "2":"z"}, {"1":"c", "2":"y", "3":"A"}] returning [["1","2","3"],["a", null, null],["b","z", null],["c","y","A"]]

  queries
    #testSelect()
      ✓ should given an array with a header and two data rows, one with a Col1 value greather than 12, should return just that one row


  25 passing (71ms)

